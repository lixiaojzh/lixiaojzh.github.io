{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://lixiaojzh.github.io","root":"/"},"pages":[],"posts":[{"title":"Geopandas-Practise-Part1","slug":"Geopandas-Practise-Part1","date":"2020-04-15T09:32:48.785Z","updated":"2020-04-15T09:55:12.108Z","comments":true,"path":"2020/04/15/Geopandas-Practise-Part1/","link":"","permalink":"https://lixiaojzh.github.io/2020/04/15/Geopandas-Practise-Part1/","excerpt":"","text":"Environment: Python3.7This is note for learning geopandas while refering to https://www.youtube.com/watch?v=xJyJlKbZFlc&amp;list=PLewNEVDy7gq3DjrPDxGFLbHE4G2QWe8Qh&amp;index=8 01. Import the packagesBasic Packages1234567## import pandas as pdimport geopandas as gpdimport numpy as npimport pandas as pdimport matplotlib.pyplot as pltfrom shapely.geometry import Point #turn latitude and longtitude into geographic points on the global%matplotlib inline 1from shapely.geometry import Polygon Geocoder packages12from geopy.geocoders import Nominatimfrom geopy.geocoders import GoogleV3 02. Importing shp filesShapefile contents shp file is not one file, it includes several files with the same name but different file types. Geopandas is made based on pandas, so the ways to read files are similar.But no matter what kind of file we are reading in Geopandas, we use gpd.read_file. 1cities = gpd.read_file('D:\\ARCGIS\\Covid-19 Cases in New Zealand\\output\\DHI_POINTS.shp') 1cities.head(2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } OBJECTID_1 OBJECTID DHB2015_Co DHB2015_Na Shape_Leng Shape_Le_1 ORIG_FID geometry 0 1 100 01 Northland 1.651929e+06 16.524423 0 POINT (173.82591 -35.48993) 1 2 100 02 Waitemata 9.273920e+05 9.301324 1 POINT (174.54665 -36.56396) The last column is the geometry of the shp file data.The geometry includes: Point, Line, Ploygon Plot the shp files1cities.plot() &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d7968f8e48&gt; 12Districts = gpd.read_file(r'D:\\ARCGIS\\mygeodata\\nz_ta-polygon.shp')Districts.plot() &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d794570be0&gt; 1Districts.head(5) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } TA2016 TA2016_NAM AREA_SQ_KM LAND_SQ_KM rmapshaper geometry 0 001 Far North District 6689.8397 6677.4102 0 MULTIPOLYGON (((173.57980 -35.35020, 173.58690... 1 002 Whangarei District 2711.7983 2711.7983 1 MULTIPOLYGON (((174.70210 -35.95510, 174.71330... 2 003 Kaipara District 3108.7123 3108.7123 2 POLYGON ((173.76480 -35.60640, 173.75930 -35.6... 3 011 Thames-Coromandel District 2207.0122 2207.0122 3 MULTIPOLYGON (((175.92670 -37.06880, 175.92890... 4 012 Hauraki District 1270.0486 1270.0486 4 MULTIPOLYGON (((175.54000 -37.16870, 175.54210... Data Selection and treatmentData selection and munipulation in Geopandas is same as Pandas, so it would be easy for those who are familiar with Pandas Packages. Select the District with the area over 100001Districts[Districts.AREA_SQ_KM &gt; 10000] .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } TA2016 TA2016_NAM AREA_SQ_KM LAND_SQ_KM rmapshaper geometry 44 053 Marlborough District 10470.4614 10457.6710 44 MULTIPOLYGON (((174.10160 -41.53220, 174.10220... 48 057 Westland District 11862.7155 11827.8208 48 MULTIPOLYGON (((170.18810 -43.21380, 170.18780... 62 073 Southland District 30198.4023 29552.3318 62 MULTIPOLYGON (((167.39580 -47.26400, 167.39830... 1Districts[Districts.AREA_SQ_KM &gt; 10000].plot() &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d7985a87b8&gt; Select the District with the name starting with ‘A’1Districts[Districts.TA2016_NAM.str.startswith('A')] .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } TA2016 TA2016_NAM AREA_SQ_KM LAND_SQ_KM rmapshaper geometry 53 063 Ashburton District 6189.5196 6182.5534 53 POLYGON ((172.19490 -43.90370, 172.18710 -43.9... 65 076 Auckland 4940.8756 4939.8049 65 MULTIPOLYGON (((175.16600 -36.90360, 175.16900... 1Districts[Districts.TA2016_NAM.str.startswith('A')].plot() &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d7985d5c50&gt; Write the info into filesWriting to shp files1cities.to_file('D:\\ARCGIS\\Covid-19 Cases in New Zealand\\output\\DHI_POINTS_COPY.shp') Writing to GeoJason1cities.to_file('D:\\ARCGIS\\Covid-19 Cases in New Zealand\\output\\DHI_POINTS.geojson', driver = 'GeoJSON') 03. Opening CSV files with geopandas open up the csv with pandas We’ll take lat/lon feed it to shapely, which creates a Point we will use original dataframe and geometry infomation to make geodataframe for Geopandas tell the new geodataframe that coords are latitude and longitude read out the csv files12df = pd.read_csv('Chicago_Public_Schools_-_Progress_Report_Cards__2011-2012-v3.csv')df.head(2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } School ID NAME_OF_SCHOOL Elementary, Middle, or High School Street Address City State ZIP Code Phone Number Link Network Manager ... Freshman on Track Rate % X_COORDINATE Y_COORDINATE Latitude Longitude COMMUNITY_AREA_NUMBER COMMUNITY_AREA_NAME Ward Police District Location 0 610038 Abraham Lincoln Elementary School ES 615 W Kemper Pl Chicago IL 60614 (773) 534-5720 http://schoolreports.cps.edu/SchoolProgressRep... Fullerton Elementary Network ... NDA 1171699.458 1915829.428 41.924497 -87.644522 7 LINCOLN PARK 43 18 (41.92449696, -87.64452163) 1 610281 Adam Clayton Powell Paideia Community Academy ... ES 7511 S South Shore Dr Chicago IL 60649 (773) 535-6650 http://schoolreports.cps.edu/SchoolProgressRep... Skyway Elementary Network ... NDA 1196129.985 1856209.466 41.760324 -87.556736 43 SOUTH SHORE 7 4 (41.76032435, -87.55673627) 2 rows × 78 columns Select the column data we need1df2 = df.loc[:,['NAME_OF_SCHOOL','City','Latitude','Longitude' ]] 1df2.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } NAME_OF_SCHOOL City Latitude Longitude 0 Abraham Lincoln Elementary School Chicago 41.924497 -87.644522 1 Adam Clayton Powell Paideia Community Academy ... Chicago 41.760324 -87.556736 2 Adlai E Stevenson Elementary School Chicago 41.747111 -87.731702 3 Agustin Lara Elementary Academy Chicago 41.809757 -87.672145 4 Air Force Academy High School Chicago 41.828146 -87.632794 1Point(-78,40) Creating shapely Points from latitude and longtitude12points = df2.apply(lambda row:Point(row.Longitude,row.Latitude), axis =1)# Attention: axis =1points.head() 0 POINT (-87.64452163 41.92449696) 1 POINT (-87.55673627 41.76032435) 2 POINT (-87.73170248 41.74711093) 3 POINT (-87.6721446 41.8097569) 4 POINT (-87.63279369 41.82814609) dtype: objectMaking a geodataframe by dataframe and geo point information123schools = gpd.GeoDataFrame(df2,geometry = points)schools.crs = &#123;'init':'epsg:4326'&#125; #project systemschools.head(2) C:\\Python37\\lib\\site-packages\\pyproj\\crs\\crs.py:53: FutureWarning: &apos;+init=&lt;authority&gt;:&lt;code&gt;&apos; syntax is deprecated. &apos;&lt;authority&gt;:&lt;code&gt;&apos; is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6 return _prepare_from_string(&quot; &quot;.join(pjargs)) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } NAME_OF_SCHOOL City Latitude Longitude geometry 0 Abraham Lincoln Elementary School Chicago 41.924497 -87.644522 POINT (-87.64452 41.92450) 1 Adam Clayton Powell Paideia Community Academy ... Chicago 41.760324 -87.556736 POINT (-87.55674 41.76032) 1schools.plot() &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d7967c0390&gt; 04. What is a Coordinate Reference SystemsCoordinate Reference Systems Geographic Coordinate SystemsEllipsoid - shape of the earthDatum - where is the ellipsoid goes http://epsg.io/ to get the EPSG No. for certain addressEPSG standards for European petroleum survey group WGS84 – EPSG:4326 NAD83 – EPSG:4269 GDA94 – EPSG:4939 IAU codes 05. Customizing map projections in geopandas1Districts.plot() &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d796447e80&gt; 1Districts.to_crs(&#123;'proj':'merc'&#125;).plot(figsize = (10,10)) &lt;matplotlib.axes._subplots.AxesSubplot at 0x1d79605efd0&gt; We can see although the shape is still similar, the X,Y axes are different since the coordinate system has changed.06. Customizing basic map styles with geopandaspass parameter to .plotwork with the ax variable 12ax = Districts.plot(figsize = (20,20))ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) coloring shape 1.fill - inside part2. strike/line/edge - outline 12ax = Districts.plot(figsize = (10,10), color = 'grey', edgecolor = 'white')ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) 12ax = Districts.plot(figsize = (10,10), color = '#CCCCCC', edgecolor = '#FF0000')ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) 12ax = cities.plot(figsize = (10,10), color = '#CCCCCC', edgecolor = '#FF0000', linewidth = 5)ax.axis('off') (168.32748359957623, 178.38357246311102, -45.94570795960331, -34.986255336266005) 12ax = Districts.plot(figsize = (10,10), color = '#CCCCCC', edgecolor = '#FF0000', linewidth = 0.25)ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) 1Districts.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } TA2016 TA2016_NAM AREA_SQ_KM LAND_SQ_KM rmapshaper geometry 0 001 Far North District 6689.8397 6677.4102 0 MULTIPOLYGON (((173.57980 -35.35020, 173.58690... 1 002 Whangarei District 2711.7983 2711.7983 1 MULTIPOLYGON (((174.70210 -35.95510, 174.71330... 2 003 Kaipara District 3108.7123 3108.7123 2 POLYGON ((173.76480 -35.60640, 173.75930 -35.6... 3 011 Thames-Coromandel District 2207.0122 2207.0122 3 MULTIPOLYGON (((175.92670 -37.06880, 175.92890... 4 012 Hauraki District 1270.0486 1270.0486 4 MULTIPOLYGON (((175.54000 -37.16870, 175.54210... 12ax = Districts.plot(figsize = (10,10))ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) 12ax = Districts.plot(figsize = (10,10), color = 'green')ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) 12ax = Districts.plot(figsize = (10,10), color = 'green', markersize =100 ,alpha =0.5)ax.axis('off') (165.81877500000002, 179.184325, -47.934870000000004, -33.747730000000004) 1ax = cities.plot(figsize = (10,10), color = 'green', markersize =100 ,alpha =0.5) 1234ax = cities.plot(figsize = (10,10), color = 'green', markersize =100 ,alpha =0.5)ax.axis('off')ax.set_xlim([170,176])ax.set_ylim([-42,-36]) (-42, -36) Reference:https://www.youtube.com/watch?v=JN35I8EYD4M&list=PLewNEVDy7gq3DjrPDxGFLbHE4G2QWe8Qh&index=9 https://geopandas.org/ http://epsg.io/ https://catalogue.data.govt.nz/dataset?res_format=GeoJSON","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-04-15T07:20:41.940Z","updated":"2020-04-15T07:20:41.940Z","comments":true,"path":"2020/04/15/hello-world/","link":"","permalink":"https://lixiaojzh.github.io/2020/04/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}